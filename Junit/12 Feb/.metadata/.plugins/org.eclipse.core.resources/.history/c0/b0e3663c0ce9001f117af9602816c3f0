package com;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class CalculatorTest {
	
	static Calculator c1;
	
//	Before Any test case is run this will be run first, like establishing connection for entire program at start
	@BeforeAll
	static void generateCalculatorObject()
	{
		c1 = new Calculator();
		System.out.println("----Started----");
	}
	
//	After everything is done this method will run , like finally . Eg:Closing connections
	@AfterAll
	static void removeCalculatorObject()
	{
		c1 = null;
		System.out.println("----Finished----");
	}

//	Before each and every test method is run this will execute and then that method will execute. Eg: we want to reset the state of something before every method is run.
	@BeforeEach
	void abc()
	{
		System.out.println("Before Each test case this will run");
	}
	
//	After every method is done running we want to run this .
	@AfterEach
	void xyz()
	{
		System.out.println("After Each test case this will run");
	}
	@Test
	void test() {
		assertTrue(true);
	}
		
	@Test
	void testAdd()
	{
		Calculator c1 = new Calculator();
		assertEquals(30,c1.add(10,20), ()->"Sum is not right");
		assertEquals(50,c1.add(30,20), ()->"Sum is not right");
		assertEquals(-10,c1.add(10,-20), ()->"Sum is not right");
		System.out.println("From add method");
	}
	
	//write a note on exception handling here
	@Test
	void testDiv() throws Exception
	{
	    Calculator c1 = new Calculator();
	    assertEquals(2, c1.div(10, 5));
	    assertThrows(ArithmeticException.class, () -> c1.div(10, 0));
	    System.out.println("From div method");
	}
	
	@Test
	void testMul()
	{
		System.out.println("From testMulStart() method ");
		assertEquals(50, c1.mul(10, 50));
		assertEquals(25, c1.mul(5, 5));
		assertEquals(40, c1.mul(1, 5));
		assertEquals(50, c1.mul(10, 50));
		System.out.println("From testMulEnd() method");
	}


}
